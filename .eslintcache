[{"D:\\Play\\Code\\crowdax-frontend\\src\\index.js":"1","D:\\Play\\Code\\crowdax-frontend\\src\\App.js":"2","D:\\Play\\Code\\crowdax-frontend\\src\\reportWebVitals.js":"3","D:\\Play\\Code\\crowdax-frontend\\src\\components\\navbar\\MainNavbar.jsx":"4","D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\HomeHeader.jsx":"5","D:\\Play\\Code\\crowdax-frontend\\src\\components\\footer\\Footer.jsx":"6","D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\AllCampaigns.jsx":"7","D:\\Play\\Code\\crowdax-frontend\\src\\components\\raise\\RaiseHome.jsx":"8","D:\\Play\\Code\\crowdax-frontend\\src\\components\\dashboard\\InvestmentDashboard.jsx":"9","D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\TrendingCampaigns.jsx":"10","D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\LatestCampaigns.jsx":"11","D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\UpcomingCampaigns.jsx":"12","D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\Headlines.jsx":"13","D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\Campaign.jsx":"14","D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\Headline.jsx":"15","D:\\Play\\Code\\crowdax-frontend\\src\\components\\auth\\signup\\Signup.jsx":"16","D:\\Play\\Code\\crowdax-frontend\\src\\components\\auth\\signin\\Login.jsx":"17","D:\\Play\\Code\\crowdax-frontend\\src\\components\\404\\NotFoundPage.jsx":"18"},{"size":559,"mtime":1617286336199,"results":"19","hashOfConfig":"20"},{"size":9773,"mtime":1618102259040,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1617026441972,"results":"22","hashOfConfig":"20"},{"size":2471,"mtime":1618103553998,"results":"23","hashOfConfig":"20"},{"size":4487,"mtime":1617284616920,"results":"24","hashOfConfig":"20"},{"size":769,"mtime":1617026441962,"results":"25","hashOfConfig":"20"},{"size":1088,"mtime":1617620615443,"results":"26","hashOfConfig":"20"},{"size":1076,"mtime":1617292546308,"results":"27","hashOfConfig":"20"},{"size":7672,"mtime":1617285710297,"results":"28","hashOfConfig":"20"},{"size":393,"mtime":1617026441957,"results":"29","hashOfConfig":"20"},{"size":482,"mtime":1617026441957,"results":"30","hashOfConfig":"20"},{"size":454,"mtime":1617026441957,"results":"31","hashOfConfig":"20"},{"size":295,"mtime":1617026441962,"results":"32","hashOfConfig":"20"},{"size":2584,"mtime":1617603301674,"results":"33","hashOfConfig":"20"},{"size":686,"mtime":1617026441962,"results":"34","hashOfConfig":"20"},{"size":6824,"mtime":1618103707126,"results":"35","hashOfConfig":"20"},{"size":4054,"mtime":1617801473460,"results":"36","hashOfConfig":"20"},{"size":229,"mtime":1617378888790,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1331hhw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Play\\Code\\crowdax-frontend\\src\\index.js",[],["78","79"],"D:\\Play\\Code\\crowdax-frontend\\src\\App.js",[],"D:\\Play\\Code\\crowdax-frontend\\src\\reportWebVitals.js",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\navbar\\MainNavbar.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\HomeHeader.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\footer\\Footer.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\AllCampaigns.jsx",["80"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Campaign from \"./Campaign\";\r\n\r\nexport class AllCampaigns extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    headlines: [\r\n      { id: 1, heading: \"Invested So Far\", content: \"$159,000\" },\r\n      { id: 2, heading: \"Available companies\", content: 7 },\r\n      { id: 3, heading: \"Done Deals\", content: 230 },\r\n      { id: 4, heading: \"Available Investors\", content: 450 },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"p-1\" />\r\n            <h1>INVEST NOW</h1>\r\n            <p>Browse through the current investment opportunities</p>\r\n            <p className=\"p-1\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/*Passed down from app.js */}\r\n          {this.props.campaigns.map((campaign) => (\r\n            <Campaign key={campaign.id} campaign={campaign} />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllCampaigns;\r\n","D:\\Play\\Code\\crowdax-frontend\\src\\components\\raise\\RaiseHome.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\dashboard\\InvestmentDashboard.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\TrendingCampaigns.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\LatestCampaigns.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\UpcomingCampaigns.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\Headlines.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\campaigns\\Campaign.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\home\\Headline.jsx",[],"D:\\Play\\Code\\crowdax-frontend\\src\\components\\auth\\signup\\Signup.jsx",["81","82"],"import React, { Component } from \"react\";\r\n\r\nimport { Button, Col, Form, Row, Container, Card } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n/* import googleIcon from \"../../assests/google_icon.svg\";\r\nimport facebookIcon from \"../../assests/facebook_icon.svg\";\r\nimport twitterIcon from \"../../assests/twitter_icon.svg\";\r\nimport linkedinIcon from \"../../assests/linkedin_icon.svg\";\r\n */\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      verified: \"NOT_VERIFIED\",\r\n      account_type: \"INVESTOR\",\r\n      registrationErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  //Prevents a signed user to access signup page\r\n  componentDidUpdate() {\r\n    if (this.props.loggedInStatus === \"LOGGED_IN\") this.props.history.push(\"/\");\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      password,\r\n      password_confirmation,\r\n    } = this.state;\r\n\r\n    if (password !== password_confirmation) {\r\n    }\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/api/v1/registrations\",\r\n        {\r\n          user: {\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            email: email,\r\n            password: password,\r\n            password_confirmation: password_confirmation,\r\n            verified: \"NOT_VERIFIED\",\r\n            account_type: \"INVESTOR\",\r\n          },\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        //   console.log(\"data\", response.data);\r\n\r\n        if (response.data.status === \"created\") {\r\n          this.props.handleLogin(response.data);\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"registration error\", error);\r\n        if (error == \"Network Error\") {\r\n          console.log(\"silly\", error === \"Network Error\");\r\n        }\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"800px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <h3 align=\"center \">Sign Up to Crowdax</h3>\r\n                  <hr />\r\n\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control\r\n                            name=\"firstname\"\r\n                            placeholder=\"First name\"\r\n                            value={this.state.first_name}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            name=\"lastname\"\r\n                            placeholder=\"Last name\"\r\n                            value={this.state.last_name}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Minimum length is 6 characters\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password_confirmation\"\r\n                        placeholder=\"Password Confirmation\"\r\n                        value={this.state.password_confirmation}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                      <Form.Check\r\n                        type=\"switch\"\r\n                        id=\"agree-with-terms-switch\"\r\n                        label=\"Agree with our terms and conditions\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Button variant=\"info\" size=\"lg\" type=\"submit\">\r\n                      Register\r\n                    </Button>\r\n                  </Form>\r\n                  <p className=\"p-2\" />\r\n                  {/* <h5> Or Signup with </h5>\r\n                  <Row>\r\n                    {this.state.Icons.map((Icon) => (\r\n                      <IconsForSigning key={Icon.id} Icon={Icon} />\r\n                    ))}\r\n                  </Row> */}\r\n                </Col>\r\n                <Col sm className=\"w-500\" style={{ maxWidth: \"500px\" }}>\r\n                  <h3 align=\"center\">Hello, Investor</h3>\r\n                  <hr />\r\n                  <p align=\"justify\">\r\n                    Join Crowdax and start investing in African startups and\r\n                    companies. Or register your company so that our team asseses\r\n                    it for a possible chance of being funded.\r\n                  </p>\r\n                  <p>If you already have an account sign below</p>\r\n                  <p className=\"p-3\" />\r\n                  <Link to=\"/signin\">\r\n                    <Button variant=\"info\" size=\"lg\" type=\"submit\">\r\n                      Sign In\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default SignUp;\r\n","D:\\Play\\Code\\crowdax-frontend\\src\\components\\auth\\signin\\Login.jsx",["83","84"],"import React, { Component } from \"react\";\r\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\n/* import googleIcon from \"../../assests/google_icon.svg\";\r\nimport facebookIcon from \"../../assests/facebook_icon.svg\";\r\nimport twitterIcon from \"../../assests/twitter_icon.svg\";\r\nimport linkedinIcon from \"../../assests/linkedin_icon.svg\"; */\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emai: \"\",\r\n      password: \"\",\r\n      LoginErrors: \"\",\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  //Prevents a signed user to access signup page\r\n  componentDidUpdate() {\r\n    if (this.props.loggedInStatus == \"LOGGED_IN\") this.props.history.push(\"/\");\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { email, password, password_confirmation } = this.state;\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/api/v1/sessions\",\r\n        {\r\n          user: {\r\n            email: email,\r\n            password: password,\r\n          },\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.logged_in) {\r\n          this.props.handleLogin(response.data);\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Login Error\", error);\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"800px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row style={{ margin: \"50px\" }}>\r\n                <Col sm={4}>\r\n                  <h3 align=\"center\">Join Crowdax</h3>\r\n\r\n                  <hr />\r\n                  <p align=\"justify\">\r\n                    Start investing or fund raising with Crowdax by getting a\r\n                    fresh new account.\r\n                  </p>\r\n\r\n                  <p className=\"p-2\" />\r\n                  <Link to=\"/signup\">\r\n                    <Button variant=\"info\" size=\"lg\" type=\"submit\">\r\n                      Signup{\" \"}\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col sm={8}>\r\n                  <h3 align=\"center\">Welcome back to Crowdax</h3>\r\n                  <hr />\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />{\" \"}\r\n                      <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />{\" \"}\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"info\" size=\"lg\" type=\"submit\">\r\n                      Login\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","D:\\Play\\Code\\crowdax-frontend\\src\\components\\404\\NotFoundPage.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":6,"column":3,"nodeType":"91","messageId":"92","endLine":8,"endColumn":4},{"ruleId":"93","severity":1,"message":"94","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":76,"column":19,"nodeType":"99","messageId":"100","endLine":76,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":25,"column":35,"nodeType":"99","messageId":"100","endLine":25,"endColumn":37},{"ruleId":"93","severity":1,"message":"101","line":29,"column":30,"nodeType":"95","messageId":"96","endLine":29,"endColumn":51},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Formik' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'password_confirmation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]